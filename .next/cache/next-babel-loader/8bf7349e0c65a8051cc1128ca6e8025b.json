{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/main/layout';\nimport { useForm } from 'react-hook-form';\nimport Cookies from 'js-cookie';\nimport jwt from 'jsonwebtoken';\nimport BtnPrimary from '../components/main/btnPrimary';\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  var userdata = [];\n\n  if (req.headers.cookie) {\n    {\n      /* Split the section \"cookie\" in dictionary */\n    }\n    var str = req.headers.cookie.split('; ');\n    var cookies = {};\n\n    for (var i = 0; i < str.length; i++) {\n      var cur = str[i].split('=');\n      cookies[cur[0]] = cur[1];\n    }\n\n    {\n      /* Check if the key 'token' exists in the cookie section */\n    }\n\n    if (cookies['token']) {\n      var d = new Date();\n      var now = Math.round(d.getTime() / 1000);\n      var expires = jwt.decode(cookies['token']).exp;\n      {\n        /* Check if the token is expired */\n      }\n\n      if (now >= expires) {\n        res.setHeader(\"location\", \"/login\");\n      }\n    } else {\n      {\n        var myHeaders = new Headers();\n        myHeaders.append(\"Authorization\", \"Bearer \" + cookies['token']);\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        var requestOptions = {\n          method: 'GET',\n          headers: myHeaders\n        };\n        const rest = await fetch(process.env.apiUrl + '/api/profiles/' + jwt.decode(cookies['token']).user_id, requestOptions);\n        userdata = await rest.json();\n      }\n    }\n  } else {\n    res.setHeader(\"location\", \"/login\");\n    res.statusCode = 302;\n  }\n\n  return {\n    props: {\n      userdata\n    }\n  };\n}\n\nconst createOrder = () => {\n  var myHeaders = new Headers();\n  myHeaders.append(\"Authorization\", \"Bearer \" + Cookies.get('token'));\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  var formdata = new FormData();\n  formdata.append(\"client\", jwt.decode(Cookies.get('token')).user_id);\n  formdata.append(\"status\", \"Pending Payment\");\n  var requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: formdata,\n    redirect: 'follow'\n  };\n  fetch(\"https://www.trainingapi.tk/api/orders/\", requestOptions).then(response => response.text()).then(result => console.log(result)).then().catch(error => console.log('error', error));\n};\n\nexport default function BankForm() {\n  return __jsx(Layout, null, __jsx(BtnPrimary, {\n    fun: createOrder,\n    name: \"Payment\"\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}